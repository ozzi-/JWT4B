package gui;

import java.awt.Cursor;
import java.awt.Desktop;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.Serial;
import java.net.URI;
import java.util.Base64;
import java.util.Objects;

import javax.imageio.ImageIO;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.WindowConstants;
import javax.swing.border.EmptyBorder;

import app.helpers.Output;

public class JLabelLink extends JFrame {
	@Serial
	private static final long serialVersionUID = 1L;

	private static final String LOGO_DATA = "";
	private static final Base64.Decoder DECODER = Base64.getDecoder();
	private final JPanel pan;

	public JLabelLink(String title, int x, int y) {
		this.setTitle(title);
		this.setSize(x, y);
		this.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
		this.setBounds(0, 0, x, y);
		this.setLocationRelativeTo(null);
		this.setLocationRelativeTo(null);

		pan = new JPanel();
		pan.setBorder(new EmptyBorder(10, 10, 10, 10));
		BoxLayout boxLayout = new BoxLayout(pan, BoxLayout.Y_AXIS);
		pan.setLayout(boxLayout);

		this.setContentPane(pan);
		this.setVisible(true);
	}

	public void addURL(String content, String tooltip) {
		JLabel label = new JLabel("<html>" + content + "</html>");
		label.putClientProperty("html.disable", null);
		label.setCursor(new Cursor(Cursor.HAND_CURSOR));
		label.setToolTipText(tooltip);
		addMouseHandler(label);
		pan.add(label);
	}

	public void addText(String content) {
		JLabel label = new JLabel("<html>" + content + "</html>");
		label.putClientProperty("html.disable", null);
		pan.add(label);
	}

	public void addLogoImage() {
		byte[] imageBytes = DECODER.decode(LOGO_DATA);
		try {
			BufferedImage img = ImageIO.read(new ByteArrayInputStream(imageBytes));
			ImageIcon icon = new ImageIcon(img);
			JLabel label = new JLabel();
			label.setIcon(icon);
			pan.add(label);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	private void addMouseHandler(final JLabel website) {
		website.addMouseListener(new MouseAdapter() {

			@Override
			public void mouseClicked(MouseEvent e) {
				try {
					String href = parseHREF(website.getText());
					Desktop.getDesktop().browse(new URI(Objects.requireNonNull(href)));
				} catch (Exception ex) {
					Output.outputError("Exception trying to browser from jlabel href - " + ex.getMessage());
				}
			}
		});
	}

	private static String parseHREF(String html) {
		String hrefMarker = "href=\"";
		int hrefLoc = html.indexOf(hrefMarker);
		if (hrefLoc > 1) {
			int hrefEndLoc = html.indexOf("\">");
			if (hrefEndLoc > hrefLoc + 4) {
				return html.substring(hrefLoc + hrefMarker.length(), hrefEndLoc);
			}
		}
		return null;
	}

}
